#include "buffer.h"

int ncols = 80;
int nrows = 24;

int
main(int argc, char **argv)
{
	ncols = (argc > 1) ? atoi(argv[1]) : ncols;
	nrows = (argc > 2) ? atoi(argv[2]) : nrows;

	printf("COLS: %d\nROWS: %d\n", ncols, nrows);

	return 0;
}

void *
file_load(struct FileBuf *file, const char *path)
{
	struct stat stats;
	int fd = open(path, O_RDONLY, S_IRUSR);

	if (fstat(fd, &stats) >= 0) {
		char *buf = mmap(NULL, stats.st_size, PROT_READ, MAP_PRIVATE, fd, 0);
		if (buf && buf != MAP_FAILED) {
			file->buf  = buf;
			file->size = stats.st_size;
			file->fd   = fd;
			return buf;
		}
	}

	return NULL;
}

void
file_unload(struct FileBuf *file)
{
	if (munmap(file->buf, file->size) == 0)
		file->buf = NULL;
	close(file->fd);
}

